#!/bin/bash
#
# zfs-mount     This script will mount/umount the zfs filesystems.
#
# chkconfig:    2345 01 99
# description:  This script will mount/umount the zfs filesystems during
#               system boot/shutdown. Configuration of which filesystems
#               should be mounted is handled by the zfs 'mountpoint' and
#               'canmount' properties. See the zfs(8) man page for details.
#               It is also responsible for all userspace zfs services.
# probe: true
#
### BEGIN INIT INFO
# Provides:          zvol zfs zfs-mount
# Required-Start:    $local_fs
# Required-Stop:     
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Mount ZFS filesystems and volumes
# Description: Run the `zfs mount -a` or `zfs umount -a` commands.
### END INIT INFO

# Source the common init script
. @sysconfdir@/zfs/common.init
servicename=zfs-mount

# ----------------------------------------------------

# Mount all datasets/filesystems
do_mount()
{
	if [ -f "$LOCKDIR/zfs-import" ]; then
		[ "$VERBOSE_MOUNT" == 'yes' ] && verbose=v
		[ "$DO_OVERLAY_MOUNTS" == 'yes' ] && overlay=O

		$log_begin_msg "Mounting ZFS filesystems not yet mounted"
		$ZFS mount -a$verbose$overlay $MOUNT_EXTRA_OPTIONS
		RET=$?
		if [ $RET != 0 ] ; then
			$log_end_msg $RET
			exit $RET
		fi
		$log_end_msg 0

		FS_MOUNTED=1

		$log_begin_msg "Mounting volumes registered in fstab: "
		read_mtab  "^/dev/(zd|zvol)"
		read_fstab "^/dev/(zd|zvol)"
		for volume in "${!FSTAB[@]}" ; do
			in_mtab "$volume" && continue

			$log_progress_msg "$volume "
			mount "$volume"
		done

		read_mtab  "zfs"
		read_fstab "zfs"
		for fs in "${!FSTAB[@]}" ; do
			in_mtab "${FSTAB[$fs]}" && continue

			$log_progress_msg "${FSTAB[$fs]} "
			mount "${FSTAB[$fs]}"
		done

		$log_end_msg 0
	fi
}

# Unmount all filesystems
do_unmount()
{
	$log_begin_msg "Unmounting ZFS filesystems"
	$ZFS unmount -a
	RET=$?

	# Ignore a non-zero `zfs` result so that a busy ZFS instance
	# does not hang the system during shutdown.
	if [ $RET != 0 ] ; then
		$log_end_msg $RET
	fi

	$log_end_msg 0

	read_mtab  "^/dev/(zd|zvol)"
	read_fstab "^/dev/(zd|zvol)"

	$log_begin_msg "Unmounting volumes registered in fstab: "
	for volume in "${!FSTAB[@]}" ; do
		dev=/dev/$(ls -l "$volume" | sed 's@.*/@@')
		if ! in_mtab "$dev" ; then continue ; fi

		$log_progress_msg "$volume "
		umount "$volume"
	done

	$log_end_msg 0
}

start()
{
	checksystem && {
		case "$ZFS_MOUNT" in
			([Oo][Ff][Ff]|[Nn][Oo]|'')
				exit 3
				;;
		esac

		do_mount

		touch "$LOCKDIR/$servicename"
	}
}

stop()
{
	case "$ZFS_UNMOUNT" in
		([Oo][Ff][Ff]|[Nn][Oo]|'')
			exit 0
			;;
	esac

	# Check if ZFS is installed.  If not, comply to FC standards and bail
	zfs_installed || {
		$log_failure_msg "not installed"
		$log_end_msg 5
	}

	if ! grep -q zfs /proc/modules ; then
		# module not loaded, no need to umount anything
		exit 0
	fi

	do_unmount

	rm -f "$LOCKDIR/$servicename"
}

# ----------------------------------------------------

case "$1" in
	(start)
		start
		;;
	(stop)
		stop
		;;
	(force-reload|condrestart|reload|restart)
		# no-op
		;;
	(*)
		[ -n "$1" ] && echo "Error: Unknown command $1."
		echo "Usage: $0 {start|stop}"
		exit 3
		;;
esac
